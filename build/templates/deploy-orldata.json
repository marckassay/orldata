{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group name for Orldata. Only one instance of this type is needed per subscription."
      }
    },
    "resGroupLocation": {
      "type": "string",
      "metadata": {
        "description": "The resource group location."
      }
    },
    "deployName": {
      "type": "string",
      "metadata": {
        "description": "The name of the deployment. This can be referenced later in the resourece group setting's deployment blade. This is value is generated by `Get-DeploymentTemplateObject`."
      }
    },
    "containerGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the deployment. This can be referenced later in the resourece group setting's deployment blade. This is value is generated by `Get-DeploymentTemplateObject`."
      }
    },
    "imageRegistryCredentials": {
      "type": "array",
      "metadata": {
        "description": "The container registry credentials related to resGroupName. Only one instance of this type is needed per subscription."
      }
    },
    "imageUri": {
      "type": "string",
      "metadata": {
        "description": "The registry path with image name. This is the image Uri."
      }
    },
    "containerDNSName": {
      "type": "string",
      "metadata": {
        "description": "The container dns name. Note, that this is currently used as 'staging' to confirm that container deployment is running as expected before moving to 'prod'."
      }
    },
    "sslKey": {
      "type": "string",
      "metadata": {
        "description": "The private ssl key. Must be encoded in base64."
      }
    },
    "sslCrt": {
      "type": "string",
      "metadata": {
        "description": "The ssl certificate. Must be encoded in base64. This is value is generated by `Get-DeploymentTemplateObject`."
      }
    },
    "nginxConf": {
      "type": "string",
      "metadata": {
        "description": "The nginx configuration file. Must be encoded in base64. This is value is generated by `Get-DeploymentTemplateObject`."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-11-01",
      "name": "[parameters('deployName')]",
      "resourceGroup": "[parameters('resGroupName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
          },
          "variables": {
          },
          "resources": [
            {
              "type": "Microsoft.ContainerInstance/containerGroups",
              "apiVersion": "2018-10-01",
              "location": "[parameters('resGroupLocation')]",
              "name": "[parameters('containerGroupName')]",
              "properties": {
                "osType": "Linux",
                "restartPolicy": "Always",
                "imageRegistryCredentials": "[parameters('imageRegistryCredentials')]",
                "ipAddress": {
                  "ports": [
                    {
                      "protocol": "TCP",
                      "port": 443
                    }
                  ],
                  "type": "Public",
                  "dnsNameLabel": "[parameters('containerDNSName')]"
                },
                "containers": [
                  {
                    "name": "orldata-app",
                    "properties": {
                      "image": "[parameters('imageUri')]",
                      "ports": [
                        {
                          "protocol": "TCP",
                          "port": 443
                        }
                      ],
                      "resources": {
                        "requests": {
                          "memoryInGB": 1.5,
                          "cpu": 1.0
                        }
                      },
                      "volumeMounts": [
                        {
                          "name": "nginx-config",
                          "mountPath": "/etc/nginx",
                          "readOnly": true
                        }
                      ]
                    }
                  }
                ],
                "volumes": [
                  {
                    "name": "nginx-config",
                    "secret": {
                      "ssl.key": "[parameters('sslKey')]",
                      "ssl.crt": "[parameters('sslCrt')]",
                      "nginx.conf": "[parameters('nginxConf')]"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {

          }
        }
      }
    }
  ],
  "outputs": {

  }
}
